int[][] tabuleiro = new int[3][3]; // 0 = vazio, 1 = X, 2 = O
int jogadorAtual = 1;
boolean jogoFinalizado = false;
boolean contraComputador = false;

void setup() {
  size(300, 350);
  reiniciarTabuleiro();
}

void draw() {
  background(255);
  desenharTabuleiro();
  desenharMenu();
  if (!jogoFinalizado && contraComputador && jogadorAtual == 2) {
    jogadaComputador();
  }
}

void mousePressed() {
  if (mouseY > 300) {
    if (mouseX < width / 2) {
      contraComputador = false;
    } else {
      contraComputador = true;
    }
    reiniciarTabuleiro();
    return;
  }
  
  if (jogoFinalizado || (contraComputador && jogadorAtual == 2)) return;
  int linha = mouseY / 100;
  int coluna = mouseX / 100;
  
  if (tabuleiro[linha][coluna] == 0) {
    tabuleiro[linha][coluna] = jogadorAtual;
    verificarVencedor();
    if (!jogoFinalizado) {
      jogadorAtual = (jogadorAtual == 1) ? 2 : 1;
    }
  }
}

void desenharTabuleiro() {
  stroke(0);
  for (int i = 1; i < 3; i++) {
    line(i * 100, 0, i * 100, 300);
    line(0, i * 100, 300, i * 100);
  }
  
  for (int l = 0; l < 3; l++) {
    for (int c = 0; c < 3; c++) {
      int x = c * 100 + 50;
      int y = l * 100 + 50;
      if (tabuleiro[l][c] == 1) {
        line(x - 30, y - 30, x + 30, y + 30);
        line(x + 30, y - 30, x - 30, y + 30);
      } else if (tabuleiro[l][c] == 2) {
        ellipse(x, y, 60, 60);
      }
    }
  }
}

void desenharMenu() {
  fill(200);
  rect(0, 300, width / 2, 50);
  rect(width / 2, 300, width / 2, 50);
  fill(0);
  textSize(16);
  textAlign(CENTER, CENTER);
  text("2 Jogadores", width / 4, 325);
  text("Contra PC", 3 * width / 4, 325);
}

void verificarVencedor() {
  for (int i = 0; i < 3; i++) {
    if (tabuleiro[i][0] != 0 && tabuleiro[i][0] == tabuleiro[i][1] && tabuleiro[i][1] == tabuleiro[i][2]) { finalizarJogo(tabuleiro[i][0]); return; }
    if (tabuleiro[0][i] != 0 && tabuleiro[0][i] == tabuleiro[1][i] && tabuleiro[1][i] == tabuleiro[2][i]) { finalizarJogo(tabuleiro[0][i]); return; }
  }
  if (tabuleiro[0][0] != 0 && tabuleiro[0][0] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][2]) { finalizarJogo(tabuleiro[0][0]); return; }
  if (tabuleiro[0][2] != 0 && tabuleiro[0][2] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][0]) { finalizarJogo(tabuleiro[0][2]); return; }
  
  boolean empate = true;
  for (int l = 0; l < 3; l++) {
    for (int c = 0; c < 3; c++) {
      if (tabuleiro[l][c] == 0) empate = false;
    }
  }
  if (empate) {
    println("Empate!");
    jogoFinalizado = true;
  }
}

void finalizarJogo(int vencedor) {
  if (!jogoFinalizado) {
    println("Jogador " + vencedor + " venceu!");
    jogoFinalizado = true;
  }
}

void reiniciarTabuleiro() {
  for (int l = 0; l < 3; l++) {
    for (int c = 0; c < 3; c++) {
      tabuleiro[l][c] = 0;
    }
  }
  jogoFinalizado = false;
  jogadorAtual = 1;
}

void jogadaComputador() {
  if (jogoFinalizado) return;
  int linha, coluna;
  do {
    linha = int(random(3));
    coluna = int(random(3));
  } while (tabuleiro[linha][coluna] != 0);
  
  tabuleiro[linha][coluna] = 2;
  verificarVencedor();
  if (!jogoFinalizado) {
    jogadorAtual = 1;
  }
}
